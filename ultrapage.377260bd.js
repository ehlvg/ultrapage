let defaultConfig={location:{lat:59.9386,lon:30.3141},sections:[{id:"work",name:"Work",icon:"briefcase",items:[{name:"Gmail",url:"https://mail.google.com",icon:"envelope",color:"#ea4335"},{name:"GitHub",url:"https://github.com",icon:"github-logo",color:"#333333"},{name:"Claude",url:"https://claude.ai",icon:"robot",color:"#ff6b35"},{name:"Calendar",url:"https://calendar.google.com",icon:"calendar",color:"#4285f4"},{name:"Drive",url:"https://drive.google.com",icon:"google-drive-logo",color:"#0f9d58"}]},{id:"entertainment",name:"Entertainment",icon:"play",items:[{name:"YouTube",url:"https://youtube.com",icon:"youtube-logo",color:"#ff0000"},{name:"X",url:"https://x.com",icon:"x",color:"#000000"},{name:"Reddit",url:"https://reddit.com",icon:"reddit-logo",color:"#ff4500"},{name:"Steam",url:"https://store.steampowered.com",icon:"game-controller",color:"#171a21"}]},{id:"dev",name:"Development",icon:"code",items:[{name:"Stack Overflow",url:"https://stackoverflow.com",icon:"stack-overflow-logo",color:"#f48024"},{name:"MDN",url:"https://developer.mozilla.org",icon:"file-code",color:"#005a9c"},{name:"CodePen",url:"https://codepen.io",icon:"codepen-logo",color:"#000000"}]}],searchEngines:{"!g":"https://google.com/search?q=","!y":"https://youtube.com/results?search_query=","!r":"https://reddit.com/search?q=","!x":"https://x.com/search?q=","!cl":"https://claude.ai/new?q=","!ch":"https://chat.openai.com/?q=","!gh":"https://github.com/search?q=","!so":"https://stackoverflow.com/search?q=","!w":"https://en.wikipedia.org/wiki/","!d":"https://duckduckgo.com/?q="}};class ConfigManager{constructor(){this.config=this.loadConfig()}loadConfig(){try{let e=localStorage.getItem("startpage-config");return e?{...defaultConfig,...JSON.parse(e)}:defaultConfig}catch(e){return console.warn("Failed to load config from localStorage, using defaults"),defaultConfig}}saveConfig(){try{localStorage.setItem("startpage-config",JSON.stringify(this.config))}catch(e){console.warn("Failed to save config to localStorage")}}getConfig(){return this.config}updateConfig(e){this.config={...this.config,...e},this.saveConfig()}}class WeatherService{constructor(e){this.configManager=e,this.updateWeather(),setInterval(()=>this.updateWeather(),6e5)}async updateLocation(e,t){this.configManager.updateConfig({location:{lat:e,lon:t}}),this.updateWeather()}async updateWeather(){try{let{lat:e,lon:t}=this.configManager.getConfig().location,n=await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${e}&longitude=${t}&current_weather=true&hourly=temperature_2m,relativehumidity_2m,windspeed_10m`),o=await n.json();if(o.current_weather){let e=Math.round(o.current_weather.temperature);o.current_weather.windspeed;let t=o.current_weather.weathercode,n=this.getWeatherIcon(t);document.getElementById("weather-info").innerHTML=`<i class="${n}"></i><span>${e}\xb0C</span>`}}catch(e){console.error("Failed to fetch weather:",e),document.getElementById("weather-info").innerHTML='<i class="ph ph-cloud"></i><span>--Â°</span>'}}getWeatherIcon(e){return({0:"ph ph-sun",1:"ph ph-sun",2:"ph ph-cloud-sun",3:"ph ph-cloud",45:"ph ph-cloud",48:"ph ph-cloud",51:"ph ph-cloud-rain",53:"ph ph-cloud-rain",55:"ph ph-cloud-rain",61:"ph ph-cloud-rain",63:"ph ph-cloud-rain",65:"ph ph-cloud-rain",71:"ph ph-cloud-snow",73:"ph ph-cloud-snow",75:"ph ph-cloud-snow",95:"ph ph-cloud-lightning"})[e]||"ph ph-cloud"}}class SearchManager{constructor(e){this.configManager=e,this.searchInput=document.getElementById("search-input"),this.suggestions=document.getElementById("search-suggestions"),this.selectedSuggestion=-1,this.setupEventListeners()}setupEventListeners(){this.searchInput.addEventListener("input",e=>{this.handleInput(e.target.value)}),this.searchInput.addEventListener("keydown",e=>{this.handleKeydown(e)}),this.searchInput.addEventListener("blur",()=>{setTimeout(()=>this.hideSuggestions(),150)})}handleInput(e){e.length>0?this.showSuggestions(e):this.hideSuggestions()}handleKeydown(e){let t=this.suggestions.querySelectorAll(".suggestion");switch(e.key){case"Enter":e.preventDefault(),this.selectedSuggestion>=0&&t[this.selectedSuggestion]?this.selectSuggestion(t[this.selectedSuggestion]):this.performSearch(this.searchInput.value);break;case"ArrowDown":e.preventDefault(),this.selectedSuggestion=Math.min(this.selectedSuggestion+1,t.length-1),this.updateSuggestionSelection();break;case"ArrowUp":e.preventDefault(),this.selectedSuggestion=Math.max(this.selectedSuggestion-1,-1),this.updateSuggestionSelection();break;case"Escape":this.searchInput.value="",this.hideSuggestions(),this.searchInput.blur()}}showSuggestions(e){let t=this.configManager.getConfig().searchEngines,n=[];Object.keys(t).forEach(t=>{(t.toLowerCase().includes(e.toLowerCase())||e.startsWith(t))&&n.push({type:"engine",key:t,name:this.getEngineName(t),icon:this.getEngineIcon(t)})}),e.length>1&&n.push({type:"search",query:e,name:`Search for "${e}"`,icon:"ph ph-magnifying-glass"}),this.renderSuggestions(n)}renderSuggestions(e){if(0===e.length)return void this.hideSuggestions();this.suggestions.innerHTML=e.map((e,t)=>`
        <div class="suggestion px-5 py-3 cursor-pointer transition-all duration-200 flex items-center gap-3 hover:bg-black/5 dark:hover:bg-white/5" data-index="${t}" data-type="${e.type}" data-query="${e.query||e.key}">
            <i class="${e.icon}"></i>
            <span>${e.name}</span>
        </div>
    `).join(""),this.suggestions.style.display="block",this.selectedSuggestion=-1,this.suggestions.querySelectorAll(".suggestion").forEach(e=>{e.addEventListener("click",()=>this.selectSuggestion(e))})}updateSuggestionSelection(){this.suggestions.querySelectorAll(".suggestion").forEach((e,t)=>{t===this.selectedSuggestion?(e.className="suggestion selected bg-blue-500 text-white px-5 py-3 cursor-pointer transition-all duration-200 flex items-center gap-3",e.querySelector("i").style.color="white"):(e.className="suggestion px-5 py-3 cursor-pointer transition-all duration-200 flex items-center gap-3 hover:bg-black/5 dark:hover:bg-white/5",e.querySelector("i").style.color="")})}selectSuggestion(e){let t=e.dataset.type,n=e.dataset.query;"engine"===t?(this.searchInput.value=n+" ",this.searchInput.focus(),this.hideSuggestions()):this.performSearch(n)}performSearch(e){let t=this.configManager.getConfig().searchEngines,n=e.trim(),o=n.match(/^(![\w]+)\s*(.*)/);if(o){let[,e,a]=o,i=t[e];i?a?window.open(i+encodeURIComponent(a),"_blank"):window.open(i,"_blank"):window.open(`https://duckduckgo.com/?q=${encodeURIComponent(n)}`,"_blank")}else window.open(`https://duckduckgo.com/?q=${encodeURIComponent(n)}`,"_blank");this.searchInput.value="",this.hideSuggestions(),this.searchInput.blur()}hideSuggestions(){this.suggestions.style.display="none",this.selectedSuggestion=-1}getEngineName(e){return({"!g":"Google","!y":"YouTube","!r":"Reddit","!x":"X (Twitter)","!cl":"Claude AI","!ch":"ChatGPT","!gh":"GitHub","!so":"Stack Overflow","!w":"Wikipedia","!d":"DuckDuckGo"})[e]||e}getEngineIcon(e){return({"!g":"ph ph-google-logo","!y":"ph ph-youtube-logo","!r":"ph ph-reddit-logo","!x":"ph ph-x-logo","!cl":"ph ph-robot","!ch":"ph ph-chat-circle","!gh":"ph ph-github-logo","!so":"ph ph-stack-overflow-logo","!w":"ph ph-book-open","!d":"ph ph-magnifying-glass"})[e]||"ph ph-magnifying-glass"}}class TabManager{constructor(e){this.configManager=e,this.currentTab=0,this.setupTabs()}setupTabs(){let e=this.configManager.getConfig(),t=document.getElementById("tabs-container"),n=document.getElementById("content-container");t.innerHTML=e.sections.map((e,t)=>`
        <button class="px-5 py-3 rounded-2xl cursor-pointer transition-all duration-300 bg-transparent border-none text-gray-600 dark:text-gray-400 text-sm font-medium whitespace-nowrap flex items-center gap-2 hover:bg-black/5 dark:hover:bg-white/5 hover:text-gray-900 dark:hover:text-white ${0===t?"bg-white/90 dark:bg-gray-800/90 text-gray-900 dark:text-white shadow-lg -translate-y-0.5":""}" data-tab="${t}">
            <i class="ph ph-${e.icon}"></i>
            <span>${e.name}</span>
        </button>
    `).join(""),n.innerHTML=e.sections.map((e,t)=>`
        <div class="animate-fade-in ${0===t?"block":"hidden"}" data-content="${t}">
            <div class="grid grid-cols-1 gap-6">
                <div class="bg-white/90 dark:bg-gray-900/90 backdrop-blur-xl rounded-3xl p-6 border border-black/10 dark:border-white/10 shadow-lg transition-all duration-300 hover:-translate-y-1 hover:shadow-2xl">
                    <h2 class="text-xl font-bold mb-5 text-gray-900 dark:text-white flex items-center gap-3">
                        <i class="ph ph-${e.icon}"></i>
                        ${e.name}
                    </h2>
                    <div class="grid grid-cols-3 sm:grid-cols-4 lg:grid-cols-3 xl:grid-cols-4 gap-4">
                        ${e.items.map(e=>`
                            <a href="${e.url}" target="_blank" class="flex flex-col items-center text-gray-900 dark:text-white p-4 rounded-2xl transition-all duration-300 bg-black/5 dark:bg-white/5 border border-transparent hover:bg-white/80 dark:hover:bg-gray-800/80 hover:-translate-y-0.5 hover:scale-105 hover:border-black/10 dark:hover:border-white/10 hover:shadow-lg no-underline">
                                <i class="ph ph-${e.icon} text-3xl mb-2 transition-transform duration-300 hover:scale-110" style="color: ${e.color}"></i>
                                <span class="text-xs font-medium text-center leading-tight">${e.name}</span>
                            </a>
                        `).join("")}
                    </div>
                </div>
            </div>
        </div>
    `).join(""),t.addEventListener("click",e=>{let t=e.target.closest("button[data-tab]");t&&this.switchTab(parseInt(t.dataset.tab))})}switchTab(e){let t=document.querySelectorAll("[data-tab]"),n=document.querySelectorAll("[data-content]");t.forEach((t,n)=>{n===e?(t.className=t.className.replace(/bg-transparent|bg-white\/90|dark:bg-gray-800\/90|text-gray-600|dark:text-gray-400|text-gray-900|dark:text-white|shadow-lg|-translate-y-0\.5/g,""),t.className+=" bg-white/90 dark:bg-gray-800/90 text-gray-900 dark:text-white shadow-lg -translate-y-0.5"):(t.className=t.className.replace(/bg-white\/90|dark:bg-gray-800\/90|text-gray-900|dark:text-white|shadow-lg|-translate-y-0\.5/g,""),t.className+=" bg-transparent text-gray-600 dark:text-gray-400")}),n.forEach((t,n)=>{n===e?(t.classList.remove("hidden"),t.classList.add("block")):(t.classList.add("hidden"),t.classList.remove("block"))}),this.currentTab=e}switchToTab(e){let t=this.configManager.getConfig(),n=(this.currentTab+e+t.sections.length)%t.sections.length;this.switchTab(n)}switchToTabNumber(e){let t=this.configManager.getConfig();e>=1&&e<=t.sections.length&&this.switchTab(e-1)}}class VimNavigation{constructor(e,t){this.searchManager=e,this.tabManager=t,this.helpVisible=!1,this.setupKeyboardListeners()}setupKeyboardListeners(){document.addEventListener("keydown",e=>{if(document.activeElement!==this.searchManager.searchInput)switch(e.key){case"/":e.preventDefault(),this.searchManager.searchInput.focus();break;case"?":e.preventDefault(),this.toggleHelp();break;case"j":e.preventDefault(),this.tabManager.switchToTab(1);break;case"k":e.preventDefault(),this.tabManager.switchToTab(-1);break;case"Escape":this.hideHelp();break;default:let t=parseInt(e.key);t>=1&&t<=9&&(e.preventDefault(),this.tabManager.switchToTabNumber(t))}})}toggleHelp(){this.helpVisible=!this.helpVisible,document.getElementById("vim-help").classList.toggle("show",this.helpVisible)}hideHelp(){this.helpVisible=!1,document.getElementById("vim-help").classList.remove("show")}}class TimeDisplay{constructor(){this.updateTime(),setInterval(()=>this.updateTime(),1e3)}updateTime(){let e=new Date().toLocaleTimeString("en-US",{hour12:!1,hour:"2-digit",minute:"2-digit"});document.getElementById("current-time").textContent=e}}function openSettings(){document.getElementById("settings-dialog").showModal(),renderSectionsList()}function closeSettings(){document.getElementById("settings-dialog").close()}function changeGradient(e){let t=document.getElementById("body-element");t.className=t.className.replace(/gradient-\d+/,`gradient-${e}`);let n=window.configManager;n.getConfig().selectedGradient=e,n.saveConfig()}function renderSectionsList(){let e=window.configManager.getConfig();document.getElementById("sections-list").innerHTML=e.sections.map((t,n)=>`
        <div class="flex items-center justify-between p-4 bg-black/5 dark:bg-white/5 rounded-xl border border-black/10 dark:border-white/10 flex-wrap gap-2">
            <div class="flex items-center gap-3 flex-wrap">
                <i class="ph ph-${t.icon} text-xl text-gray-900 dark:text-white"></i>
                <span class="font-medium text-gray-900 dark:text-white">${t.name}</span>
                <span class="text-sm text-gray-500 dark:text-gray-400">${t.items.length} items</span>
            </div>
            <div class="flex gap-2">
                <button onclick="editSection(${n})" class="px-3 py-1 w-full bg-blue-50 text-blue-700 dark:bg-blue-950 dark:text-blue-200 rounded-lg text-sm hover:bg-blue-100 dark:hover:bg-blue-900 transition-colors shadow-sm">
                    <i class="ph ph-pencil"></i>
                </button>
                <button onclick="moveSection(${n}, -1)" class="px-3 py-1 w-full bg-gray-50 text-gray-700 dark:bg-gray-900 dark:text-gray-200 rounded-lg text-sm hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors shadow-sm disabled:opacity-50 disabled:cursor-not-allowed" ${0===n?"disabled":""}>
                    <i class="ph ph-arrow-up"></i>
                </button>
                <button onclick="moveSection(${n}, 1)" class="px-3 py-1 w-full bg-gray-50 text-gray-700 dark:bg-gray-900 dark:text-gray-200 rounded-lg text-sm hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors shadow-sm disabled:opacity-50 disabled:cursor-not-allowed" ${n===e.sections.length-1?"disabled":""}>
                    <i class="ph ph-arrow-down"></i>
                </button>
            </div>
        </div>
    `).join("")}function moveSection(e,t){let n=window.configManager.getConfig(),o=e+t;if(o<0||o>=n.sections.length)return;let a=n.sections[e];n.sections[e]=n.sections[o],n.sections[o]=a,window.configManager.saveConfig(),renderSectionsList(),window.tabManager.setupTabs()}function addSection(){editSection(-1)}function editSection(e){let t=window.configManager.getConfig(),n=e>=0?t.sections[e]:{name:"",icon:"",items:[]};document.getElementById("section-name").value=n.name,document.getElementById("section-icon").value=n.icon,window.currentEditingSection=e,renderItemsList(n.items),document.getElementById("section-edit-dialog").showModal()}function closeSectionEdit(){document.getElementById("section-edit-dialog").close()}function renderItemsList(e){document.getElementById("items-list").innerHTML=e.map((e,t)=>`
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4 p-4 bg-black/5 dark:bg-white/5 rounded-xl border border-black/10 dark:border-white/10">
            <div>
                <label class="block text-sm font-medium mb-2 text-gray-900 dark:text-white">Name</label>
                <input type="text" value="${e.name}" placeholder="Name" 
                    class="w-full px-4 py-3 rounded-xl bg-white dark:bg-gray-800 border border-black/10 dark:border-white/10 focus:outline-none focus:border-blue-500 text-gray-900 dark:text-white" 
                    onchange="updateItem(${t}, 'name', this.value)">
            </div>
            <div>
                <label class="block text-sm font-medium mb-2 text-gray-900 dark:text-white">URL</label>
                <input type="text" value="${e.url}" placeholder="URL" 
                    class="w-full px-4 py-3 rounded-xl bg-white dark:bg-gray-800 border border-black/10 dark:border-white/10 focus:outline-none focus:border-blue-500 text-gray-900 dark:text-white" 
                    onchange="updateItem(${t}, 'url', this.value)">
            </div>
            <div>
                <label class="block text-sm font-medium mb-2 text-gray-900 dark:text-white">Icon</label>
                <input type="text" value="${e.icon}" placeholder="Icon" 
                    class="w-full px-4 py-3 rounded-xl bg-white dark:bg-gray-800 border border-black/10 dark:border-white/10 focus:outline-none focus:border-blue-500 text-gray-900 dark:text-white" 
                    onchange="updateItem(${t}, 'icon', this.value)">
            </div>
            <div class="flex flex-col gap-2">
                <label class="block text-sm font-medium mb-2 text-gray-900 dark:text-white">Color</label>
                <div class="flex gap-2">
                    <input type="color" value="${e.color}" 
                        class="w-12 h-12 rounded-xl border border-black/10 dark:border-white/10 cursor-pointer bg-white dark:bg-gray-800" 
                        onchange="updateItem(${t}, 'color', this.value)">
                    <button type="button" onclick="removeItem(${t})" 
                        class="flex-1 px-4 py-3 bg-red-500/10 text-red-600 dark:text-red-400 rounded-xl hover:bg-red-500/20 transition-colors font-medium">
                        <i class="ph ph-trash"></i>
                    </button>
                </div>
            </div>
        </div>
    `).join("")}let currentEditingItems=[];function addItem(){currentEditingItems.push({name:"",url:"",icon:"link",color:"#007aff"}),renderItemsList(currentEditingItems)}function updateItem(e,t,n){currentEditingItems[e][t]=n}function removeItem(e){currentEditingItems.splice(e,1),renderItemsList(currentEditingItems)}function deleteSection(){window.currentEditingSection>=0&&confirm("Are you sure you want to delete this section?")&&(window.configManager.getConfig().sections.splice(window.currentEditingSection,1),window.configManager.saveConfig(),closeSectionEdit(),renderSectionsList(),window.tabManager.setupTabs())}document.getElementById("section-form").addEventListener("submit",e=>{e.preventDefault();let t=window.configManager.getConfig(),n={id:Date.now().toString(),name:document.getElementById("section-name").value,icon:document.getElementById("section-icon").value,items:currentEditingItems};window.currentEditingSection>=0?t.sections[window.currentEditingSection]={...t.sections[window.currentEditingSection],...n}:t.sections.push(n),window.configManager.saveConfig(),closeSectionEdit(),renderSectionsList(),window.tabManager.setupTabs()}),document.addEventListener("DOMContentLoaded",()=>{window.configManager=new ConfigManager;let e=new WeatherService(window.configManager);new TimeDisplay;let t=new SearchManager(window.configManager);window.tabManager=new TabManager(window.configManager),new VimNavigation(t,window.tabManager),currentEditingItems=[];let n=window.configManager.getConfig();n.selectedGradient&&changeGradient(n.selectedGradient),navigator.geolocation.getCurrentPosition(t=>{e.updateLocation(t.coords.latitude,t.coords.longitude)})});
//# sourceMappingURL=ultrapage.377260bd.js.map
